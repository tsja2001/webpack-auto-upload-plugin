"use strict";const{NodeSSH:o}=require("node-ssh");class s{constructor(s){this.ssh=new o,this.options=s,this.verifyOptions()}apply(o){o.hooks.afterEmit.tapAsync("AutoPlugin",(async(o,s)=>{const t=o.outputOptions.path,e=this.options.remotePath+"/";await this.connectServer(),await this.ssh.execCommand(`rm -rf ${e}*`),await this.uploadFile(t,e),await this.ssh.dispose(),s()}))}async connectServer(){console.log("connecting 正在连接远程服务器");try{await this.ssh.connect({host:this.options.host,username:this.options.username??"root",password:this.options.password})}catch(o){throw new Error("connect failed 服务器连接失败",o)}console.log("connect succeeded 服务器连接成功")}async uploadFile(o,s){await this.ssh.putDirectory(o,s,{recursive:!0,concurrency:10})?console.log("upload succeeded! 上传成功"):console.log("upload failed! 文件上传失败")}async verifyOptions(){if(!this.options.host)throw new Error("host is required 缺少host参数, 需要远程服务器地址");if(!this.options.password)throw new Error("password is required 缺少password参数, 需要服务器密码");if(!this.options.remotePath)throw new Error("remotePath is required 缺少remotePath参数, 需要放远程文件存放路径")}}module.exports=s,module.exports.MyPlugin=s;
